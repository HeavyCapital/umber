def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg2 | arg2 | ((arg8 + var7) + (arg9 - 771 + ((arg9 ^ arg1) ^ -989 + arg2)) - ((((arg8 | arg1 & (var7 - -992403131) ^ arg1 + arg8) + -996229510 | arg1) & 642) | 81802864) + arg1) + arg1
        result = var7 | (var7 ^ arg1 | (var7 & (var7 ^ -164) - arg2 ^ arg1 ^ -89338405)) - (var7 - -91980171 | -579)
        return result
    var11 = func3(arg1, var7)
    var29 = var14(var11, arg1)
    var34 = func7(arg1, arg2)
    var35 = var7 ^ var7 + arg2 + arg2 | var7 & -205 ^ arg1
    var36 = (var35 ^ var7) + arg1 | (var7 ^ var34 ^ arg1) ^ arg1
    result = var11 ^ (var35 - var7 & var36 & ((((1495625541 | arg1) + var11) ^ -694) | var29 | var35) - var29) + -1013124546
    return result
def func7(arg30, arg31):
    var32 = 0
    for var33 in xrange(11):
        var32 += arg30 - var33 | arg30
    return var32
def func6(arg15, arg16):
    var17 = arg15 - -935613174
    var18 = arg15 ^ (arg16 & -261 | arg15)
    var19 = var18 ^ arg16 + arg16 & arg15
    if var17 < var19:
        var20 = -33 - var18
    else:
        var20 = var17 + -130155047
    var21 = var17 + arg15 & arg15 & var18
    var22 = (var18 - var18 ^ arg16) & arg16
    var23 = -655428737 - var17
    var24 = -499 & (arg15 & arg16 - arg16)
    var25 = (-752867983 & var19) & arg16 | arg16
    var26 = (var17 | var22 & -761) + var19
    if var17 < arg15:
        var27 = var19 ^ (var26 + var19) & var25
    else:
        var27 = var26 & var22
    if var17 < arg16:
        var28 = (var17 & var21 & var21) + var17
    else:
        var28 = (var26 ^ var17) & var24 + var19
    result = var23 | var24
    return result
def func5():
    closure = [-1]
    def func4(arg12, arg13):
        closure[0] += func6(arg12, arg13)
        return closure[0]
    func = func4
    return func
var14 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var6 in (-3 ^ i for i in range(36)):
        var5 += var6 ^ arg3 | var5
    return var5
